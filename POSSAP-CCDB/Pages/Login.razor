@page "/"
@layout LoginLayout

@using System.Text.Json
@using System.Text.Json.Serialization
@using Fluxor;
@using Microsoft.Extensions.Logging;
@using POSSAP_CCDB.Data;
@using Blazored.LocalStorage;
@using POSSAP_CCDB.Data.State;
@using POSSAP_CCDB.Interface;
@using POSSAP_CCDB.Services;

@inject IHttpClientFactory ClientFactory
@inject ILocalStorageService localStorage
@inject ILogger<Login> Logger


@inject IUserService UserService
@inject NavigationManager navigationManager

<div id="root">
    <div class="Toastify"></div>
    <div class="login_container">
        <div class="card login_card">
            <div class="d-flex justify-content-center flex-column align-items-center mb-4">
                <figure><img src="img/Logo-b027f9da.svg" width="62" alt="possap logo" height="62"></figure>
                <h3 class="sign_in_text">Sign In</h3>
            </div>
  
            <EditForm Model="@userCredentials" OnValidSubmit="SignIn">
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="mb-3">
                            <label class="form_label">Email</label>
                            <div class="input-group position-relative mb-1">
                                <span class="input-group-text" id="basic-addon1">
                                    <img src="img/mail-f98b4767.svg" alt="lock" width="19" height="22">
                                </span>
                                <InputText type="email" class="form-control form_input_login" placeholder="johndoe@gmail.com"
                                           id="convictUniqueId" required="" name="email" @bind-Value="@userCredentials.Email" />
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="mb-3">
                            <label for="exampleInputPassword1" class="form_label">Password</label>
                            <div class="input-group position-relative mb-1">
                                <span class="input-group-text" id="basic-addon1">
                                    <img src="img/lock-ad92bcda.svg" alt="lock" width="19" height="22">
                                </span>
                                <InputText type="password" required="" class="form-control form_input_login" name="password"
                                           placeholder="password" id="password" @bind-Value="@userCredentials.Password" />
                                <ValidationMessage For="@(() => userCredentials.Password)" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-center mt-4">
                    <button type="submit" class="custom_btn fullWidth">
                        Login
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
    <footer class="ant-layout-footer footerContainer">
        <img src="img/PossapLogo.svg" alt="possap logo"
             width="20" height="20">
        <h3 class="footerText"> Powered by POSSAP</h3>
    </footer>
</div>

@code {
    //[Inject]
    //private IState<UserState> UserState { get; set; }

    LoginModel userCredentials = new();

    public AppUser User { get; set; }

    private async Task SignIn()
    {
        try
        {
            Logger.LogInformation("HandleSubmit called");

            var user = await AuthenticateUserAsync(userCredentials);
            await SaveAccessToken(user.token);

            await UserService.SetUserAsync(user);

            navigationManager.NavigateTo($"/dashboard");
        }
        catch (Exception ex)
        {
            Logger.LogInformation("HandleSubmit called Failed");
            //handles login failure
        }
    }

    private async Task<AppUser?> AuthenticateUserAsync(LoginModel userCredentials)
    {
        using var httpClient = new HttpClient();

        var jsonData = JsonSerializer.Serialize(userCredentials);
        var content = new StringContent(jsonData, System.Text.Encoding.UTF8, "application/json");
        var response = await httpClient.PostAsync("https://possap-ccdb.ogtlprojects.com/api/Auth/login", content);
        if (!response.IsSuccessStatusCode)
        {
            throw new Exception("Failed to fetch access token.");
        }

        var responseContent = await response.Content.ReadAsStringAsync();
        var user = JsonSerializer.Deserialize<AppUser>(responseContent);
        return user;
    }

    private async Task SaveAccessToken(string accessToken)
    {
        await localStorage.SetItemAsync("access_token", accessToken);
    }
}
