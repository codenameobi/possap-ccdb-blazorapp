@using Microsoft.AspNetCore.Components
@using ChartJs.Blazor.ChartJS.Common.Enums
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.BarChart.Axes

<!--<canvas @ref="chartCanvas"></canvas>-->

@code {
   

    //[Parameter]
    //public ChartConfig Options { get; set; }

    //[Parameter]
    //public ChartJsBarChartData Data { get; set; }

    //private ChartJsBarChart chart;
    //private ElementReference chartCanvas;

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        await InitializeChart();
    //    }
    //    else
    //    {
    //        await UpdateChart();
    //    }
    //}

    //private async Task InitializeChart()
    //{
    //    var config = new ChartConfig
    //        {
    //            Options = Options,
    //            Data = Data
    //        };

    //    chart = new ChartJsBarChart(chartCanvas, config);
    //    await chart.InitializeAsync();
    //}

    //private async Task UpdateChart()
    //{
    //    await chart.UpdateAsync();
    //}
}
